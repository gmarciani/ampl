#===============================================================================
# POLYGON PROBLEM (Script)
#===============================================================================
reset;
reset options;

#===============================================================================
# HEADER
#===============================================================================
print
"============================================================================= \
POLYGON PROBLEM \
Model : polygon.mod \
Data  : polygon.dat \
Solver: SNOPT \
Author: Giacomo Marciani <gmarciani@acm.org> \
=============================================================================="
> out.txt;

#===============================================================================
# PROBLEM DECLARATION
#===============================================================================
model polygon.mod;
data polygon.dat;

#===============================================================================
# AMPL OPTIONS
#===============================================================================
option prompt1 "[AMPL]> ";
option display_width 80;
option display_1col 0;
option relax_integrality 1;

#===============================================================================
# SOLVER OPTIONS
#===============================================================================
option snopt_options "outlev=1";
#option snopt_options "relax=1";
option solver snopt;

#===============================================================================
# RESOLUTION
#===============================================================================
param iter;

solve;

for {k in 3..10} {
  let N := k;
  printf "Vertices: %d\n", N >> out.txt;

  # starting point: vertices equally distributed (radius 0.5; angle in [0, pi].
  let {i in 1..N-1} r[i] := 0.5;
  let {i in 1..N-1} a[i] := pi*i/N;

  solve;

  if (solve_result_num == 0) then {
    printf "Problem solved!\n";
    printf {i in 1..N} "Vertex %d: (%12.6f,%12.6f)\n", i, r[i]*cos(a[i]), r[i]*sin(a[i]) >> out.txt;
  } else {
    printf "No solution from this initial point\n";
    let iter := 0;
    repeat while (iter <= 100) {
      let iter := iter+1;
  		let {i in 1..N-1} r[i] := Uniform(0,1);
  		let a[1] := Uniform(0,pi);
  		for {j in 2..N-1} {
  			let a[j] := min(pi,a[j-1]+0.5*Uniform(0,pi));
  		}
  		display r,a;
  		solve;
  		if (solve_result_num == 0) then {
  			printf "Problem solved!\n";
  			printf {i in 1..N} "Vertex %d: (%12.6f,%12.6f)\n", i, r[i]*cos(a[i]), r[i]*sin(a[i]) >> out.txt;
  			break;
  		}

  		if (iter == 100) then {
        printf "Optimal Solution NOT Found (%d)\n", solve_result_num;
      }
    }
  }
}
